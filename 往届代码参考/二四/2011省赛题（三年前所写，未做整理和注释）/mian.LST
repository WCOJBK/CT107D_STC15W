C51 COMPILER V9.01   MIAN                                                                  02/05/2017 20:30:59 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MIAN
OBJECT MODULE PLACED IN mian.OBJ
COMPILER INVOKED BY: E:\keil4-C51\C51\BIN\C51.EXE mian.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <config.h>
   2          #include <init.h>
   3          #include <display.h>
   4          #include <key.h>
   5          #include <onewire.h>
   6          #include <at24c02.h> 
   7          
   8          uchar inr = 0;    //按键计数
   9          uchar key_flag = 0;                     //按键标志
  10          uchar key_temp = 0;                     //当前按下按键存储
  11          
  12          uint temp_inr = 0;                 //温度读取计数，每250ms读一次
  13          uchar temp_flag = 0;       //温度标志
  14          uchar tempValue = 0;       //当前读取温度
  15          
  16          uchar temp_up = 30;                //上限
  17          uchar temp_down = 20;      //下限
  18          
  19          void Timer0Init(void)           //1毫秒@12.000MHz
  20          {
  21   1              AUXR |= 0x80;           //定时器时钟1T模式
  22   1              TMOD &= 0xF0;           //设置定时器模式
  23   1              TL0 = 0x20;             //设置定时初值
  24   1              TH0 = 0xD1;             //设置定时初值
  25   1              TF0 = 0;                //清除TF0标志
  26   1              TR0 = 1;                //定时器0开始计时
  27   1      }
  28          
  29          void Timer1Init(void)           //100微秒@12.000MHz
  30          {
  31   1              AUXR |= 0x40;           //定时器时钟1T模式
  32   1              TMOD &= 0x0F;           //设置定时器模式
  33   1              TL1 = 0x50;             //设置定时初值
  34   1              TH1 = 0xFB;             //设置定时初值
  35   1              TF1 = 0;                //清除TF1标志
  36   1              TR1 = 1;                //定时器1开始计时
  37   1      }
  38          
  39          
  40          void main(){
  41   1              gpio();                                 //初始化针脚
  42   1              Timer0Init();                   //初始化计数器0 用于计数
  43   1              Timer1Init();
  44   1              EA = 1;                           
  45   1              PT1 = 1;                          //将计数器1的优先度调为最高
  46   1              PT0 = 0;                          //将计数器0的优先度调为0，及最低
  47   1              ET0 = 1;
  48   1              temp_up = readEeprom(0x00);                                      //读取上下限
  49   1              temp_down = readEeprom(0x01);
  50   1              if(temp_down >= temp_up){
  51   2                      temp_down = temp_up;
  52   2              }                                                        //当读取数据混乱的时候进行一定处理，使其符合萝莉
  53   1              while(1){
  54   2                      if(key_flag){
  55   3                              key_flag = 0;
C51 COMPILER V9.01   MIAN                                                                  02/05/2017 20:30:59 PAGE 2   

  56   3                              key_temp = scanKey();     //扫描独立按键，该独立按键为状态机，无法同时识别俩次，无按下时候返回0xff
  57   3                              if(key_temp != 0xff){
  58   4                                      switch(key_temp){
  59   5                                              case 1:
  60   5                                                      if(temp_down > 0){
  61   6                                                              temp_down--;
  62   6                                                      }
  63   5                                                      break;
  64   5                                              case 2:
  65   5                                                      if(temp_up > temp_down){
  66   6                                                              temp_up--;
  67   6                                                      }
  68   5                                                      break;
  69   5                                              case 3:
  70   5                                                      if(temp_down < temp_up){
  71   6                                                              temp_down++;
  72   6                                                      }
  73   5                                                      break;
  74   5                                              case 4:
  75   5                                                      if(temp_up < 99){
  76   6                                                              temp_up++;
  77   6                                                      }
  78   5                                                      break;
  79   5                                      }
  80   4                                      writeEeprom(0x00, temp_up);                             //显示上下限
  81   4                                      writeEeprom(0x01, temp_down);                           
  82   4                              }
  83   3                      }
  84   2                      if(temp_flag){
  85   3                              temp_flag = 0;
  86   3                              tempValue = (uchar)(readTheTemp() /100);
  87   3                              settemp(tempValue);
  88   3                              if(tempValue > temp_up){
  89   4                                      ET1 = 1;                                  //打开PWM
  90   4      
  91   4                                      ET0 = 0;                                  //暂时关闭显示定时器，防止干扰到P0口
  92   4                                      P0 = 0x00; 
  93   4                                      setY5();
  94   4                                      ET0 = 1;
  95   4                              }else if(tempValue < temp_down){
  96   4                                      ET1 = 0;
  97   4                                      P34 = 1;
  98   4      
  99   4                                      ET0 = 0;
 100   4                                      P0 = 0x10; 
 101   4                                      setY5();
 102   4                                      ET0 = 1;
 103   4                              }else{
 104   4                                      ET1 = 0;
 105   4                                      P34 = 1;
 106   4      
 107   4                                      ET0 = 0;
 108   4                                      P0 = 0x00; 
 109   4                                      setY5();
 110   4                                      ET0 = 1;                                
 111   4                              }
 112   3                      }
 113   2      
 114   2                      setdown(temp_down);                     //显示上下限
 115   2                      setup(temp_up);
 116   2              }
 117   1      }
C51 COMPILER V9.01   MIAN                                                                  02/05/2017 20:30:59 PAGE 3   

 118          
 119          void time0_isr() interrupt 1{
 120   1              display();      
 121   1              if(++inr == 10){
 122   2                      inr = 0;
 123   2                      key_flag = 1;
 124   2              }
 125   1              if(++temp_inr == 250){
 126   2                      temp_inr = 0;
 127   2                      temp_flag = 1;
 128   2              }
 129   1      }
 130          
 131          void time1_isr() interrupt 3{
 132   1              static uchar cnt;
 133   1              if(++cnt == 3){
 134   2                      P34 = 0;
 135   2              }else if(cnt >= 10){
 136   2                      cnt = 0;
 137   2                      P34 = 1;
 138   2              }               
 139   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    406    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
