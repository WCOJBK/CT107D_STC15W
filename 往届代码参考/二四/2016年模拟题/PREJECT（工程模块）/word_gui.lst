C51 COMPILER V9.52.0.0   WORD_GUI                                                          01/13/2018 21:31:57 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE WORD_GUI
OBJECT MODULE PLACED IN .\word_gui.obj
COMPILER INVOKED BY: C:\Keil_v4\C51\BIN\C51.EXE ..\APP(逻辑模块)\word_gui.c BROWSE INCDIR(..\APP(逻辑模块);..\CORE（内核
                    -模块）;..\HARDWARE（硬件模块）) DEBUG OBJECTEXTEND PRINT(.\word_gui.lst) TABS(2) OBJECT(.\word_gui.obj)

line level    source

   1          #include "stc_config.h"
   2          #include "word_gui.h"
   3          
   4          #include "onewire.h"
   5          #include "display.h"
   6          #include "key.h"
   7          
   8          
   9          
  10          
  11          void reSetLed(){
  12   1        ET0 = 0;
  13   1        
  14   1        sys_led_cache = (~(sys_led_cache&0x01)) | (sys_led_cache&0xfe);
  15   1        P0 = sys_led_cache;
  16   1        setLed;
  17   1        
  18   1        ET0 = 1;
  19   1      }
  20          
  21          
  22          void word_gui_funtion(void){
  23   1        int temp_temp = 0;
  24   1        int temp_range = 0;
  25   1        int temp_key = 0;
  26   1        char i;
  27   1        
  28   1        led_count = 0;
  29   1        
  30   1        //在while中实现事件
  31   1        //当出现跳转条件的时候，修改now_sys_stat，并break出来
  32   1        //就实现了状态机的跳转
  33   1        
  34   1        while(1){
  35   2          //所谓事件，其实就是功能
  36   2          
  37   2          //1.温度的读取
  38   2          temp_temp =  getTemp();
  39   2          //2.区间的判断(上限，下限)
  40   2          if(temp_temp > sys_temp_upper){
  41   3            temp_range = 2;
  42   3          }else if(    temp_temp <= sys_temp_upper 
  43   2                    && temp_temp >= sys_temp_lower){
  44   3            temp_range = 1;
  45   3          }else if(temp_temp < sys_temp_lower){
  46   3            temp_range = 0;
  47   3          }
  48   2          //3.根据区间进行判断，执行LED与继电器的操作
  49   2          if(temp_range == 0 || temp_range == 1){
  50   3            ET0 = 0;
  51   3            //继电器
  52   3            P0 = 0x00;
  53   3            setOpen;  
  54   3            if(temp_range == 0){
C51 COMPILER V9.52.0.0   WORD_GUI                                                          01/13/2018 21:31:57 PAGE 2   

  55   4              //初始化
  56   4              if(led_usedFlag == 0){
  57   5                led_usedFlag = 1;
  58   5                led_count = 800;
  59   5              }
  60   4              
  61   4              //检测计数是否到0 
  62   4              //(同时也要检测他是否有被初始化，也就是有被使用)
  63   4              if(led_count == 0 && led_usedFlag == 1){
  64   5                led_usedFlag = 0;
  65   5                
  66   5                //LED反转
  67   5                reSetLed();
  68   5              }
  69   4              
  70   4            }else if(temp_range == 1){
  71   4              
  72   4              //初始化
  73   4              if(led_usedFlag == 0){
  74   5                led_usedFlag = 1;
  75   5                led_count = 400;
  76   5              }
  77   4              
  78   4              //检测计数是否到0 
  79   4              //(同时也要检测他是否有被初始化，也就是有被使用)
  80   4              if(led_count == 0 && led_usedFlag == 1){
  81   5                led_usedFlag = 0;
  82   5                
  83   5                //LED反转
  84   5                reSetLed();
  85   5              }
  86   4            }
  87   3            
  88   3            
  89   3            
  90   3            ET0 = 1;
  91   3          }else if(temp_range == 2){
  92   3            ET0 = 0;
  93   3            P0 = 0x10;
  94   3            setOpen;
  95   3            //初始化
  96   3            if(led_usedFlag == 0){
  97   4              led_usedFlag = 1;
  98   4              led_count = 200;
  99   4            }
 100   3            
 101   3            //检测计数是否到0 
 102   3            //(同时也要检测他是否有被初始化，也就是有被使用)
 103   3            if(led_count == 0 && led_usedFlag == 1){
 104   4              led_usedFlag = 0;
 105   4              
 106   4              //LED反转
 107   4              reSetLed();
 108   4            }   
 109   3            
 110   3            ET0 = 1;
 111   3          }
 112   2          //4.显示更新
 113   2          dspbuf[7] = temp_temp%10;
 114   2          dspbuf[6] = temp_temp/10%10;
 115   2          dspbuf[5] = 10;
 116   2          dspbuf[4] = 10;
C51 COMPILER V9.52.0.0   WORD_GUI                                                          01/13/2018 21:31:57 PAGE 3   

 117   2          dspbuf[3] = 10;
 118   2          dspbuf[2] = 11;
 119   2          dspbuf[1] = temp_range;
 120   2          dspbuf[0] = 11;
 121   2          
 122   2          
 123   2          //跳转判断
 124   2          temp_key = scanKey();
 125   2          if(temp_key != 0xff){
 126   3            if(temp_key == 16){ //按下了设置按键
 127   4              led_count = 0;
 128   4              led_usedFlag = 0;
 129   4              for(i = 0; i < 8; i++){
 130   5                dspbuf[i] = 10;
 131   5              }
 132   4              sys_stat = SET_GUI;
 133   4              break;
 134   4            }
 135   3          }
 136   2          
 137   2          break;
 138   2        }
 139   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    383    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
